<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.enn.greatframework.authorize.dao.OpenDeveloperUserInfoDAO" >
    <resultMap id="BaseResultMap" type="com.enn.greatframework.authorize.bean.OpenDeveloperUserInfo" >
        <!--
        @Enn.Howmuch.MybatisGenerator
        -->
        <id column="DEVELOPER_ID" property="developerId" jdbcType="VARCHAR" />
        <result column="DEVELOPER_LOGIN_ID" property="developerLoginId" jdbcType="VARCHAR" />
        <result column="DEVELOPER_PASSWORD" property="developerPassword" jdbcType="VARCHAR" />
        <result column="DEVELOPER_NAME" property="developerName" jdbcType="VARCHAR" />
        <result column="DEVELOPER_TELNO" property="developerTelno" jdbcType="VARCHAR" />
        <result column="COMPANY_NAME" property="companyName" jdbcType="VARCHAR" />
        <result column="COMPANY_LICENSE_IMAGE" property="companyLicenseImage" jdbcType="VARCHAR" />
        <result column="DEVELOPER_STATUS" property="developerStatus" jdbcType="VARCHAR" />
        <result column="DEVELOPER_AUTH_STATUS" property="developerAuthStatus" jdbcType="VARCHAR" />
        <result column="DEVELOPER_AUTH_LEVEL" property="developerAuthLevel" jdbcType="VARCHAR" />
        <result column="TIME_STAMP" property="timeStamp" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        <!--
        @Enn.Howmuch.MybatisGenerator
        -->
        DEVELOPER_ID, DEVELOPER_LOGIN_ID, DEVELOPER_PASSWORD, DEVELOPER_NAME, DEVELOPER_TELNO, 
        COMPANY_NAME, COMPANY_LICENSE_IMAGE, DEVELOPER_STATUS, DEVELOPER_AUTH_STATUS, DEVELOPER_AUTH_LEVEL, 
        TIME_STAMP
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        <!--
        @Enn.Howmuch.MybatisGenerator
        -->
        select 
        <include refid="Base_Column_List" />
        from open_developer_user_info
        where DEVELOPER_ID = #{developerId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        <!--
        @Enn.Howmuch.MybatisGenerator
        -->
        delete from open_developer_user_info
        where DEVELOPER_ID = #{developerId,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.enn.greatframework.authorize.bean.OpenDeveloperUserInfo" >
        <!--
        @Enn.Howmuch.MybatisGenerator
        -->
        insert into open_developer_user_info (DEVELOPER_ID, DEVELOPER_LOGIN_ID, DEVELOPER_PASSWORD, 
            DEVELOPER_NAME, DEVELOPER_TELNO, COMPANY_NAME, 
            COMPANY_LICENSE_IMAGE, DEVELOPER_STATUS, 
            DEVELOPER_AUTH_STATUS, DEVELOPER_AUTH_LEVEL, 
            TIME_STAMP)
        values (#{developerId,jdbcType=VARCHAR}, #{developerLoginId,jdbcType=VARCHAR}, #{developerPassword,jdbcType=VARCHAR}, 
            #{developerName,jdbcType=VARCHAR}, #{developerTelno,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
            #{companyLicenseImage,jdbcType=VARCHAR}, #{developerStatus,jdbcType=VARCHAR}, 
            #{developerAuthStatus,jdbcType=VARCHAR}, #{developerAuthLevel,jdbcType=VARCHAR}, 
            #{timeStamp,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.enn.greatframework.authorize.bean.OpenDeveloperUserInfo" >
        <!--
        @Enn.Howmuch.MybatisGenerator
        -->
        insert into open_developer_user_info
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="developerId != null" >
                DEVELOPER_ID,
            </if>
            <if test="developerLoginId != null" >
                DEVELOPER_LOGIN_ID,
            </if>
            <if test="developerPassword != null" >
                DEVELOPER_PASSWORD,
            </if>
            <if test="developerName != null" >
                DEVELOPER_NAME,
            </if>
            <if test="developerTelno != null" >
                DEVELOPER_TELNO,
            </if>
            <if test="companyName != null" >
                COMPANY_NAME,
            </if>
            <if test="companyLicenseImage != null" >
                COMPANY_LICENSE_IMAGE,
            </if>
            <if test="developerStatus != null" >
                DEVELOPER_STATUS,
            </if>
            <if test="developerAuthStatus != null" >
                DEVELOPER_AUTH_STATUS,
            </if>
            <if test="developerAuthLevel != null" >
                DEVELOPER_AUTH_LEVEL,
            </if>
            <if test="timeStamp != null" >
                TIME_STAMP,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="developerId != null" >
                #{developerId,jdbcType=VARCHAR},
            </if>
            <if test="developerLoginId != null" >
                #{developerLoginId,jdbcType=VARCHAR},
            </if>
            <if test="developerPassword != null" >
                #{developerPassword,jdbcType=VARCHAR},
            </if>
            <if test="developerName != null" >
                #{developerName,jdbcType=VARCHAR},
            </if>
            <if test="developerTelno != null" >
                #{developerTelno,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null" >
                #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="companyLicenseImage != null" >
                #{companyLicenseImage,jdbcType=VARCHAR},
            </if>
            <if test="developerStatus != null" >
                #{developerStatus,jdbcType=VARCHAR},
            </if>
            <if test="developerAuthStatus != null" >
                #{developerAuthStatus,jdbcType=VARCHAR},
            </if>
            <if test="developerAuthLevel != null" >
                #{developerAuthLevel,jdbcType=VARCHAR},
            </if>
            <if test="timeStamp != null" >
                #{timeStamp,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.enn.greatframework.authorize.bean.OpenDeveloperUserInfo" >
        <!--
        @Enn.Howmuch.MybatisGenerator
        -->
        update open_developer_user_info
        <set >
            <if test="developerLoginId != null" >
                DEVELOPER_LOGIN_ID = #{developerLoginId,jdbcType=VARCHAR},
            </if>
            <if test="developerPassword != null" >
                DEVELOPER_PASSWORD = #{developerPassword,jdbcType=VARCHAR},
            </if>
            <if test="developerName != null" >
                DEVELOPER_NAME = #{developerName,jdbcType=VARCHAR},
            </if>
            <if test="developerTelno != null" >
                DEVELOPER_TELNO = #{developerTelno,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null" >
                COMPANY_NAME = #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="companyLicenseImage != null" >
                COMPANY_LICENSE_IMAGE = #{companyLicenseImage,jdbcType=VARCHAR},
            </if>
            <if test="developerStatus != null" >
                DEVELOPER_STATUS = #{developerStatus,jdbcType=VARCHAR},
            </if>
            <if test="developerAuthStatus != null" >
                DEVELOPER_AUTH_STATUS = #{developerAuthStatus,jdbcType=VARCHAR},
            </if>
            <if test="developerAuthLevel != null" >
                DEVELOPER_AUTH_LEVEL = #{developerAuthLevel,jdbcType=VARCHAR},
            </if>
            <if test="timeStamp != null" >
                TIME_STAMP = #{timeStamp,jdbcType=VARCHAR},
            </if>
        </set>
        where DEVELOPER_ID = #{developerId,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.enn.greatframework.authorize.bean.OpenDeveloperUserInfo" >
        <!--
        @Enn.Howmuch.MybatisGenerator
        -->
        update open_developer_user_info
        set DEVELOPER_LOGIN_ID = #{developerLoginId,jdbcType=VARCHAR},
            DEVELOPER_PASSWORD = #{developerPassword,jdbcType=VARCHAR},
            DEVELOPER_NAME = #{developerName,jdbcType=VARCHAR},
            DEVELOPER_TELNO = #{developerTelno,jdbcType=VARCHAR},
            COMPANY_NAME = #{companyName,jdbcType=VARCHAR},
            COMPANY_LICENSE_IMAGE = #{companyLicenseImage,jdbcType=VARCHAR},
            DEVELOPER_STATUS = #{developerStatus,jdbcType=VARCHAR},
            DEVELOPER_AUTH_STATUS = #{developerAuthStatus,jdbcType=VARCHAR},
            DEVELOPER_AUTH_LEVEL = #{developerAuthLevel,jdbcType=VARCHAR},
            TIME_STAMP = #{timeStamp,jdbcType=VARCHAR}
        where DEVELOPER_ID = #{developerId,jdbcType=VARCHAR}
    </update>

</mapper>